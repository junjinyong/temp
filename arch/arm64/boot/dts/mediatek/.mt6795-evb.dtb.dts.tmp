# 0 "arch/arm64/boot/dts/mediatek/mt6795-evb.dts"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "arch/arm64/boot/dts/mediatek/mt6795-evb.dts"






/dts-v1/;
# 1 "arch/arm64/boot/dts/mediatek/mt6795.dtsi" 1






# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/irq.h" 1
# 8 "arch/arm64/boot/dts/mediatek/mt6795.dtsi" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 1
# 9 "arch/arm64/boot/dts/mediatek/mt6795.dtsi" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/pinctrl/mt6795-pinfunc.h" 1
# 10 "./scripts/dtc/include-prefixes/dt-bindings/pinctrl/mt6795-pinfunc.h"
# 1 "./scripts/dtc/include-prefixes/dt-bindings/pinctrl/mt65xx.h" 1
# 11 "./scripts/dtc/include-prefixes/dt-bindings/pinctrl/mt6795-pinfunc.h" 2
# 10 "arch/arm64/boot/dts/mediatek/mt6795.dtsi" 2

/ {
 compatible = "mediatek,mt6795";
 interrupt-parent = <&sysirq>;
 #address-cells = <2>;
 #size-cells = <2>;

 psci {
  compatible = "arm,psci-0.2";
  method = "smc";
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x000>;
   cci-control-port = <&cci_control2>;
   next-level-cache = <&l2_0>;
  };

  cpu1: cpu@1 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x001>;
   cci-control-port = <&cci_control2>;
   next-level-cache = <&l2_0>;
  };

  cpu2: cpu@2 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x002>;
   cci-control-port = <&cci_control2>;
   next-level-cache = <&l2_0>;
  };

  cpu3: cpu@3 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x003>;
   cci-control-port = <&cci_control2>;
   next-level-cache = <&l2_0>;
  };

  cpu4: cpu@100 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x100>;
   cci-control-port = <&cci_control1>;
   next-level-cache = <&l2_1>;
  };

  cpu5: cpu@101 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x101>;
   cci-control-port = <&cci_control1>;
   next-level-cache = <&l2_1>;
  };

  cpu6: cpu@102 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x102>;
   cci-control-port = <&cci_control1>;
   next-level-cache = <&l2_1>;
  };

  cpu7: cpu@103 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   enable-method = "psci";
   reg = <0x103>;
   cci-control-port = <&cci_control1>;
   next-level-cache = <&l2_1>;
  };

  cpu-map {
   cluster0 {
    core0 {
     cpu = <&cpu0>;
    };

    core1 {
     cpu = <&cpu1>;
    };

    core2 {
     cpu = <&cpu2>;
    };

    core3 {
     cpu = <&cpu3>;
    };
   };

   cluster1 {
    core0 {
     cpu = <&cpu4>;
    };

    core1 {
     cpu = <&cpu5>;
    };

    core2 {
     cpu = <&cpu6>;
    };

    core3 {
     cpu = <&cpu7>;
    };
   };
  };

  l2_0: l2-cache0 {
   compatible = "cache";
   cache-level = <2>;
  };

  l2_1: l2-cache1 {
   compatible = "cache";
   cache-level = <2>;
  };
 };

 clk26m: oscillator-26m {
  compatible = "fixed-clock";
  #clock-cells = <0>;
  clock-frequency = <26000000>;
  clock-output-names = "clk26m";
 };

 clk32k: oscillator-32k {
  compatible = "fixed-clock";
  #clock-cells = <0>;
  clock-frequency = <32000>;
  clock-output-names = "clk32k";
 };

 system_clk: dummy13m {
  compatible = "fixed-clock";
  clock-frequency = <13000000>;
  #clock-cells = <0>;
 };

 pmu {
  compatible = "arm,cortex-a53-pmu";
  interrupts = <0 8 8>,
        <0 9 8>,
        <0 10 8>,
        <0 11 8>;
  interrupt-affinity = <&cpu0>, <&cpu1>, <&cpu2>, <&cpu3>;
 };

 timer {
  compatible = "arm,armv8-timer";
  interrupt-parent = <&gic>;
  interrupts = <1 13
        ((((1 << (8)) - 1) << 8) | 8)>,
        <1 14
        ((((1 << (8)) - 1) << 8) | 8)>,
        <1 11
        ((((1 << (8)) - 1) << 8) | 8)>,
        <1 10
        ((((1 << (8)) - 1) << 8) | 8)>;
 };

 soc {
  #address-cells = <2>;
  #size-cells = <2>;
  compatible = "simple-bus";
  ranges;

  pio: pinctrl@10005000 {
   compatible = "mediatek,mt6795-pinctrl";
   reg = <0 0x10005000 0 0x1000>, <0 0x1000b000 0 0x1000>;
   reg-names = "base", "eint";
   interrupts = <0 153 4>,
         <0 154 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pio 0 0 196>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  watchdog: watchdog@10007000 {
   compatible = "mediatek,mt6795-wdt";
   reg = <0 0x10007000 0 0x100>;
   interrupts = <0 128 8>;
   #reset-cells = <1>;
   timeout-sec = <20>;
  };

  timer: timer@10008000 {
   compatible = "mediatek,mt6795-timer",
         "mediatek,mt6577-timer";
   reg = <0 0x10008000 0 0x1000>;
   interrupts = <0 152 8>;
   clocks = <&system_clk>, <&clk32k>;
  };

  sysirq: intpol-controller@10200620 {
   compatible = "mediatek,mt6795-sysirq",
         "mediatek,mt6577-sysirq";
   interrupt-controller;
   #interrupt-cells = <3>;
   interrupt-parent = <&gic>;
   reg = <0 0x10200620 0 0x20>;
  };

  systimer: timer@10200670 {
   compatible = "mediatek,mt6795-systimer";
   reg = <0 0x10200670 0 0x10>;
   interrupts = <0 64 4>;
   clocks = <&system_clk>;
   clock-names = "clk13m";
  };

  gic: interrupt-controller@10221000 {
   compatible = "arm,gic-400";
   #interrupt-cells = <3>;
   interrupt-parent = <&gic>;
   interrupt-controller;
   reg = <0 0x10221000 0 0x1000>,
         <0 0x10222000 0 0x2000>,
         <0 0x10224000 0 0x2000>,
         <0 0x10226000 0 0x2000>;
   interrupts = <1 9
    ((((1 << (4)) - 1) << 8) | 4)>;
  };

  cci: cci@10390000 {
   compatible = "arm,cci-400";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0 0x10390000 0 0x1000>;
   ranges = <0 0 0x10390000 0x10000>;

   cci_control0: slave-if@1000 {
    compatible = "arm,cci-400-ctrl-if";
    interface-type = "ace-lite";
    reg = <0x1000 0x1000>;
   };

   cci_control1: slave-if@4000 {
    compatible = "arm,cci-400-ctrl-if";
    interface-type = "ace";
    reg = <0x4000 0x1000>;
   };

   cci_control2: slave-if@5000 {
    compatible = "arm,cci-400-ctrl-if";
    interface-type = "ace";
    reg = <0x5000 0x1000>;
   };

   pmu@9000 {
    compatible = "arm,cci-400-pmu,r1";
    reg = <0x9000 0x5000>;
    interrupts = <0 58 4>,
          <0 59 4>,
          <0 60 4>,
          <0 61 4>,
          <0 62 4>;
   };
  };

  uart0: serial@11002000 {
   compatible = "mediatek,mt6795-uart",
         "mediatek,mt6577-uart";
   reg = <0 0x11002000 0 0x400>;
   interrupts = <0 91 8>;
   clocks = <&clk26m>;
   status = "disabled";
  };

  uart1: serial@11003000 {
   compatible = "mediatek,mt6795-uart",
         "mediatek,mt6577-uart";
   reg = <0 0x11003000 0 0x400>;
   interrupts = <0 92 8>;
   clocks = <&clk26m>;
   status = "disabled";
  };

  uart2: serial@11004000 {
   compatible = "mediatek,mt6795-uart",
         "mediatek,mt6577-uart";
   reg = <0 0x11004000 0 0x400>;
   interrupts = <0 93 8>;
   clocks = <&clk26m>;
   status = "disabled";
  };

  uart3: serial@11005000 {
   compatible = "mediatek,mt6795-uart",
         "mediatek,mt6577-uart";
   reg = <0 0x11005000 0 0x400>;
   interrupts = <0 94 8>;
   clocks = <&clk26m>;
   status = "disabled";
  };
 };
};
# 9 "arch/arm64/boot/dts/mediatek/mt6795-evb.dts" 2

/ {
 model = "MediaTek MT6795 Evaluation Board";
 compatible = "mediatek,mt6795-evb", "mediatek,mt6795";

 aliases {
  serial0 = &uart0;
  serial1 = &uart1;
  serial2 = &uart2;
  serial3 = &uart3;
 };

 memory@40000000 {
  device_type = "memory";
  reg = <0 0x40000000 0 0x1e800000>;
 };

 chosen {
  stdout-path = "serial0:921600n8";
 };
};

&uart0 {
 status = "okay";
};
